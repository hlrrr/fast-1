# https://docs.github.com/en/actions/examples/using-scripts-to-test-your-code-on-a-runner
# https://docs.docker.com/build/ci/github-actions/

name: FastAPP YAML

on: [push, pull_request]

jobs:
  # build:
  #   environment:  
  #     name: prod
  #   env:
  #       DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
  #       DATABASE_PORT:  ${{secrets.DATABASE_PORT}}
  #       DATABASE_PASSWORD:  ${{secrets.DATABASE_PASSWORD}}
  #       DATABASE_NAME:  ${{secrets.DATABASE_NAME}}
  #       DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
  #       DATABASE_URL:  ${{secrets.DATABASE_URL}}
  #       DATABASE_URL_ALEMBIC:  ${{secrets.DATABASE_URL_ALEMBIC}}
  #       SECRETE_KEY:  ${{secrets.SECRETE_KEY}}
  #       ALGORITHM: ${{secrets.ALGORITHM}}
  #       ACCESS_TOKEN_EXPIRE_MINUTES:  ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
  #       # https://docs.github.com/en/actions/security-guides/encrypted-secrets
    
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: pull repo
  #       uses: actions/checkout@v3

  #     - name: install python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.11' 

  #     - name: update pip
  #       run: python -m pip install --upgrade pip

  #     - name: intall dependencies
  #       run: pip install -r req
        
  #     # - name: run pytest
  #     #   run: pytest

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Setup Docker Buildx
  #       uses: docker/setup-buildx-action@v2
      
  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         file: ./dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/fast-1:latest
  #         # https://docs.docker.com/build/ci/github-actions/manage-tags-labels/
  #         cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/fast-1:buildcache
  #         cache-to: type=r
          
  deploy:
    runs-on: ubuntu-latest
    # needs: [build]
    environment:
      name: prod
      
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/ubuntu/repos/docker
            docker-compose up -d